RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
RTN ; RTN
MOV G9 L8 ; MOV 4 numberOfFeetADogHas
BF P5 SKIPIF1 ; BF isDogCrippled SKIPIF1
SUB L8 G52 R175 ; SUB numberOfFeetADogHas 1 R175
MOV R175 I3 ; MOV R175 feet
JMP SKIPELSE2 ; JMP SKIPELSE2
SKIPIF1: MOV L8 I3 ; MOV numberOfFeetADogHas feet
SKIPELSE2: MOV P6 I4 ; MOV canDogBark isDogMute
RTN ; RTN
BF I4 SKIPIF3 ; BF isDogMute SKIPIF3
RTN ; RTN
SKIPIF3: WRITE 2 G12 ; WRITE 2 'b'
WRITE 2 G13 ; WRITE 2 'a'
WRITE 2 G14 ; WRITE 2 'r'
WRITE 2 G15 ; WRITE 2 'k'
WRITE 2 G63 ; WRITE 2 '\n'
RTN ; RTN
MOV G57 L19 ; MOV 0 totalTimesBarked
MOV G47 L21 ; MOV 100 baseNumberOfBarks
MOV G57 L23 ; MOV 0 loopIndex
MUL 1 G51 R182 ; MUL 1 8 R182
NEW R182 R183 ; NEW R182 R183
MOV R183 L25 ; MOV R183 message
AEF L25 G57 A185 ; AEF message 0 A185
MOV G28 A185 ; MOV 'B' A185
AEF L25 G52 A187 ; AEF message 1 A187
MOV G13 A187 ; MOV 'a' A187
AEF L25 G171 A189 ; AEF message 2 A189
MOV G36 A189 ; MOV 'd' A189
AEF L25 G170 A191 ; AEF message 3 A191
MOV G34 A191 ; MOV ' ' A191
AEF L25 G9 A193 ; AEF message 4 A193
MOV G36 A193 ; MOV 'd' A193
AEF L25 G155 A195 ; AEF message 5 A195
MOV G61 A195 ; MOV 'o' A195
AEF L25 G39 A197 ; AEF message 6 A197
MOV G40 A197 ; MOV 'g' A197
AEF L25 G41 A199 ; AEF message 7 A199
MOV G42 A199 ; MOV '!' A199
BF BEGIN5 SKIPIF4 ; BF dogSeesMailman SKIPIF4
MOV G43 L21 ; MOV 400 baseNumberOfBarks
BEGIN5: MUL I3 G44 R202 ; MUL feet 150 R202
ADD L21 R202 R203 ; ADD baseNumberOfBarks R202 R203
LT L19 R203 R204 ; LT totalTimesBarked R203 R204
AND P17 R204 R205 ; AND dogSeesMailman R204 R205
BF BEGIN7 ENDWHILE6 ; BF R205 ENDWHILE6
FRAME M11 this ; FRAME bark this
CALL M11 ; CALL bark
ADI L19 G52 R206 ; ADI totalTimesBarked 1 R206
MOV R206 L19 ; MOV R206 totalTimesBarked
JMP BEGIN5 ; JMP BEGIN5
BEGIN7: NE P17 G46 R208 ; NE dogSeesMailman true R208
GT L21 G47 R209 ; GT baseNumberOfBarks 100 R209
OR R208 R209 R210 ; OR R208 R209 R210
BF BEGIN10 ENDWHILE8 ; BF R210 ENDWHILE8
FRAME M11 this ; FRAME bark this
CALL M11 ; CALL bark
SUB L21 G52 R211 ; SUB baseNumberOfBarks 1 R211
MOV R211 L21 ; MOV R211 baseNumberOfBarks
EQ L21 G57 R213 ; EQ baseNumberOfBarks 0 R213
BF R213 SKIPIF9 ; BF R213 SKIPIF9
MOV G50 P17 ; MOV false dogSeesMailman
SKIPIF9: JMP BEGIN7 ; JMP BEGIN7
BEGIN10: LT L23 G51 R215 ; LT loopIndex 8 R215
BF R215 ENDWHILE11 ; BF R215 ENDWHILE11
AEF L25 L23 A216 ; AEF message loopIndex A216
WRITE 2 A216 ; WRITE 2 A216
ADI L23 G52 R217 ; ADI loopIndex 1 R217
MOV R217 L23 ; MOV R217 loopIndex
JMP BEGIN10 ; JMP BEGIN10
ENDWHILE11: RTN ; RTN
MOV G55 I54 ; MOV 9 lives
MOV G57 I54 ; MOV 0 lives
RTN ; RTN
WRITE 2 G59 ; WRITE 2 'm'
WRITE 2 G60 ; WRITE 2 'e'
WRITE 2 G61 ; WRITE 2 'o'
WRITE 2 G62 ; WRITE 2 'w'
WRITE 2 G63 ; WRITE 2 '\n'
RTN ; RTN
READ 2 L65 ; READ 2 c
READ 1 L66 ; READ 1 i
RTN ; RTN
MOV THIS1 L69 ; MOV this self
LT P67 G57 R222 ; LT j 0 R222
BF R222 SKIPIF12 ; BF R222 SKIPIF12
RTN G71 ; RTN null
SKIPIF12: RTN L69 ; RTN self
RTN ; RTN
MOV G52 L76 ; MOV 1 x
MOV G80 L77 ; MOV 2 y
MOV G158 L78 ; MOV 3 z
EQ L76 L77 R226 ; EQ x y R226
BF R226 SKIPIF13 ; BF R226 SKIPIF13
RTN G50 ; RTN false
JMP SKIPELSE14 ; JMP SKIPELSE14
SKIPIF13: EQ L76 G80 R227 ; EQ x 2 R227
BF R227 SKIPIF15 ; BF R227 SKIPIF15
RTN G50 ; RTN false
JMP SKIPELSE16 ; JMP SKIPELSE16
SKIPIF15: NE L76 G80 R228 ; NE x 2 R228
BF SKIPELSE16 SKIPIF17 ; BF R228 SKIPIF17
MOV G80 L76 ; MOV 2 x
SKIPELSE16: ADI L76 G52 R230 ; ADI x 1 R230
EQ R230 L78 R231 ; EQ R230 z R231
SUB L78 G52 R232 ; SUB z 1 R232
EQ R232 L77 R233 ; EQ R232 y R233
AND R231 R233 R234 ; AND R231 R233 R234
BF BEGIN19 SKIPIF18 ; BF R234 SKIPIF18
MOV G57 L76 ; MOV 0 x
MOV G93 L77 ; MOV 50 y
MOV G47 L78 ; MOV 100 z
BEGIN19: SUB L78 L76 R238 ; SUB z x R238
GT R238 G57 R239 ; GT R238 0 R239
BF SKIPELSE14 ENDWHILE20 ; BF R239 ENDWHILE20
LE L77 G93 R240 ; LE y 50 R240
GT L77 G93 R241 ; GT y 50 R241
OR R240 R241 R242 ; OR R240 R241 R242
BF R242 SKIPIF21 ; BF R242 SKIPIF21
ADI L76 G52 R243 ; ADI x 1 R243
MOV R243 L76 ; MOV R243 x
SUB L78 G52 R245 ; SUB z 1 R245
MOV R245 L78 ; MOV R245 z
JMP SKIPELSE22 ; JMP SKIPELSE22
SKIPIF21: WRITE 2 G42 ; WRITE 2 '!'
RTN G50 ; RTN false
SKIPELSE22: JMP BEGIN19 ; JMP BEGIN19
SKIPELSE14: RTN G46 ; RTN true
RTN ; RTN
LT P100 P101 R247 ; LT a b R247
RTN R247 ; RTN R247
RTN ; RTN
RTN ; RTN
FRAME M113 this ; FRAME dontCallThis this
CALL M113 ; CALL dontCallThis
PEEK R248 ; PEEK R248
RTN ; RTN
MOV G52 L117 ; MOV 1 total
MOV P115 L118 ; MOV exponent exponentCopy
BEGIN23: GT L118 G57 R251 ; GT exponentCopy 0 R251
BF R251 ENDWHILE24 ; BF R251 ENDWHILE24
MUL L117 P114 R252 ; MUL total base R252
MOV R252 L117 ; MOV R252 total
JMP BEGIN23 ; JMP BEGIN23
ENDWHILE24: RTN L117 ; RTN total
RTN ; RTN
MOV L122 L123 ; MOV x y
NEWI 5 R255 ; NEWI 5 R255
FRAME M7 R255 ; FRAME Dog R255
PUSH G46 ; PUSH true
PUSH G50 ; PUSH false
CALL M7 ; CALL Dog
PEEK R256 ; PEEK R256
MOV R256 L125 ; MOV R256 d
MUL 4 G9 R258 ; MUL 4 4 R258
NEW R258 R259 ; NEW R258 R259
MOV R259 L131 ; MOV R259 oArr
NEWI 4 R261 ; NEWI 4 R261
FRAME M56 R261 ; FRAME Cat R261
CALL M56 ; CALL Cat
PEEK R262 ; PEEK R262
MOV R262 L129 ; MOV R262 c
MOV G155 L122 ; MOV 5 x
DIV G47 G93 R265 ; DIV 100 50 R265
ADI R265 G52 R266 ; ADI R265 1 R266
SUB L122 G80 R267 ; SUB x 2 R267
DIV G138 G80 R268 ; DIV 14 2 R268
ADD R267 R268 R269 ; ADD R267 R268 R269
DIV R269 G80 R270 ; DIV R269 2 R270
FRAME M116 L128 ; FRAME pow math
PUSH R270 ; PUSH R270
PUSH R266 ; PUSH R266
CALL M116 ; CALL pow
PEEK R271 ; PEEK R271
DIV G80 L123 R272 ; DIV 2 y R272
SUB R272 L122 R273 ; SUB R272 x R273
ADI R273 G52 R274 ; ADI R273 1 R274
MOV R274 L122 ; MOV R274 x
REF L129 I54 M276 ; REF c lives M276
ADD L122 M276 R277 ; ADD x M276 R277
MOV R277 L122 ; MOV R277 x
ADI G80 G52 R279 ; ADI 2 1 R279
MUL R279 L123 R280 ; MUL R279 y R280
MOV R280 L122 ; MOV R280 x
FRAME M58 L129 ; FRAME meow c
CALL M58 ; CALL meow
FRAME M68 L129 ; FRAME getSelf c
PUSH G145 ; PUSH -1
CALL M68 ; CALL getSelf
PEEK R282 ; PEEK R282
FRAME M68 R282 ; FRAME getSelf R282
PUSH G146 ; PUSH 12
CALL M68 ; CALL getSelf
PEEK R283 ; PEEK R283
MOV R283 L129 ; MOV R283 c
FRAME M74 L128 ; FRAME tryNestedIfs math
CALL M74 ; CALL tryNestedIfs
PEEK R285 ; PEEK R285
FRAME M74 L128 ; FRAME tryNestedIfs math
CALL M74 ; CALL tryNestedIfs
PEEK R286 ; PEEK R286
NE R285 R286 R287 ; NE R285 R286 R287
BF R287 SKIPIF25 ; BF R287 SKIPIF25
WRITE 2 G147 ; WRITE 2 'F'
RTN ; RTN
SKIPIF25: FRAME M74 L128 ; FRAME tryNestedIfs math
CALL M74 ; CALL tryNestedIfs
PEEK R288 ; PEEK R288
FRAME M74 L128 ; FRAME tryNestedIfs math
CALL M74 ; CALL tryNestedIfs
PEEK R289 ; PEEK R289
EQ R288 R289 R290 ; EQ R288 R289 R290
EQ R290 G46 R291 ; EQ R290 true R291
LE G149 G150 R292 ; LE -2000 -1000 R292
AND R291 R292 R293 ; AND R291 R292 R293
GE G59 G152 R294 ; GE 'm' 'n' R294
AND R293 R294 R295 ; AND R293 R294 R295
BF R295 SKIPIF26 ; BF R295 SKIPIF26
RTN ; RTN
SKIPIF26: MOV R296 L122 ; MOV R296 x
MUL L122 G154 R298 ; MUL x 10 R298
REF L129 I54 M299 ; REF c lives M299
ADD R298 M299 R300 ; ADD R298 M299 R300
MOV R301 L124 ; MOV R301 theChar
MUL 4 G155 R303 ; MUL 4 5 R303
NEW R303 R304 ; NEW R303 R304
MOV R304 L130 ; MOV R304 arr
AEF L130 G57 A306 ; AEF arr 0 A306
MOV G52 A306 ; MOV 1 A306
AEF L131 G158 A308 ; AEF oArr 3 A308
MOV G71 A308 ; MOV null A308
AEF L131 G52 A310 ; AEF oArr 1 A310
MOV L129 A310 ; MOV c A310
AEF L130 G52 A312 ; AEF arr 1 A312
MOV A312 L122 ; MOV A312 x
AEF L130 G80 A314 ; AEF arr 2 A314
AEF L130 A314 A315 ; AEF arr A314 A315
MOV G158 A315 ; MOV 3 A315
ADI G80 G52 R317 ; ADI 2 1 R317
AEF L130 G158 A318 ; AEF arr 3 A318
MUL A318 G9 R319 ; MUL A318 4 R319
DIV L122 G9 R320 ; DIV x 4 R320
ADI R320 G168 R321 ; ADI R320 -3 R321
AEF L130 R321 A322 ; AEF arr R321 A322
AEF L130 A322 A323 ; AEF arr A322 A323
DIV R319 A323 R324 ; DIV R319 A323 R324
AEF L130 G158 A325 ; AEF arr 3 A325
REF L129 I54 M326 ; REF c lives M326
AEF L130 M326 A327 ; AEF arr M326 A327
ADD A325 A327 R328 ; ADD A325 A327 R328
FRAME M68 L129 ; FRAME getSelf c
PUSH G80 ; PUSH 2
CALL M68 ; CALL getSelf
PEEK R329 ; PEEK R329
REF R329 I54 M330 ; REF R329 lives M330
MUL R328 M330 R331 ; MUL R328 M330 R331
SUB R324 R331 R332 ; SUB R324 R331 R332
ADD R317 R332 R333 ; ADD R317 R332 R333
MOV R333 L122 ; MOV R333 x
MOV L123 L122 ; MOV y x
ADD L122 L123 R336 ; ADD x y R336
MOV R336 L122 ; MOV R336 x
SUB L123 G52 R338 ; SUB y 1 R338
MOV R338 L122 ; MOV R338 x
REF L129 I54 M340 ; REF c lives M340
REF L129 I54 M341 ; REF c lives M341
DIV M341 G173 R342 ; DIV M341 15 R342
MOV R342 L122 ; MOV R342 x
MOV R343 M340 ; MOV R343 M340
RTN ; RTN
